// <auto-generated />
using EF_Core_MonsterHunter;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EF_Core_MonsterHunter.Migrations
{
    [DbContext(typeof(WeaponDbContext))]
    partial class WeaponDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EF_Core_MonsterHunter.Hunter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("HunterName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HunterRank")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Hunters");
                });

            modelBuilder.Entity("EF_Core_MonsterHunter.Weapon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("DamageMultiplier")
                        .HasColumnType("float");

                    b.Property<int>("DamageValue")
                        .HasColumnType("int");

                    b.Property<int>("HunterId")
                        .HasColumnType("int");

                    b.Property<double>("MotionValue")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rank")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SharpnessColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("SharpnessMultiplier")
                        .HasColumnType("float");

                    b.Property<string>("WeaponClass")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HunterId");

                    b.ToTable("Weapons");
                });

            modelBuilder.Entity("EF_Core_MonsterHunter.Weapon", b =>
                {
                    b.HasOne("EF_Core_MonsterHunter.Hunter", "Hunter")
                        .WithMany("Weapons")
                        .HasForeignKey("HunterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hunter");
                });

            modelBuilder.Entity("EF_Core_MonsterHunter.Hunter", b =>
                {
                    b.Navigation("Weapons");
                });
#pragma warning restore 612, 618
        }
    }
}
